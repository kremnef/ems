

importClass(Packages.ru.tastika.tools.util.Utilities);

function listLanguage() {
    listTypifiedObjects(0);
}

function createLanguage(form) {
    var showFormURI = cocoon.parameters.showFormURI;
    var servletPath = cocoon.parameters.servletPath;

    var languageService = cocoon.getComponent("languageService");
    var language = createTypifiedObject(languageService);

    var actionState = "create";
    /*var viewData = {
        "actionState": actionState
    }*/


    language = showObjectForm(form, languageService, language, showFormURI, {
//        "viewData": viewData,
        "parentId" : 0,
        "parentName" : '',
        "servletPath" : servletPath,
        "actionState": actionState
    });

    languageService.save(language);
    cocoon.releaseComponent(languageService);

    var id = language.getId();
    cocoon.disposeObject(language);
    cocoon.redirectTo("Language-edit?id=" + id);
}


function editLanguageById(form) {
    var showFormURI = cocoon.parameters.showFormURI;
    var servletPath = cocoon.parameters.servletPath;

    var id = 0;
    if (cocoon.request.getParameter("id") != null) {
        id = Utilities.parseStringToInteger(cocoon.request.getParameter("id"));
    }
    if (id == 0) {
        cocoon.redirectTo("Language-create");
    }
    var languageService = cocoon.getComponent("languageService");
    var language = languageService.getLanguage(id);
    if (language == null) {
        cocoon.releaseComponent(languageService);
        cocoon.redirectTo("Language-create");
    }

    var actionState = "edit";
   /* var viewData = {
        "actionState": actionState
    };*/

    language = showObjectForm(form, languageService, language, showFormURI, {
//        "viewData": viewData,
        "languageId": id,
        "servletPath" : servletPath,
        "actionState": actionState
    });

    languageService.save(language);
    cocoon.releaseComponent(languageService);

    cocoon.redirectTo("Language-edit?id=" + language.getId());
}

function deleteLanguageById() {

    var entity = "Language";
    var id = 0;
    if (cocoon.request.getParameter("id") != null) {
        id = Utilities.parseStringToInteger(cocoon.request.getParameter("id"));
    }
    if (id == 0) {
        cocoon.redirectTo(entity+"-list");
    }
    var languageService = cocoon.getComponent("languageService");
    var language = languageService.getLanguage(id);
    if (language == null) {
        cocoon.releaseComponent(languageService);
        cocoon.redirectTo(entity+"-list");
    }

    languageService.deleteLanguage(language);

    cocoon.releaseComponent(languageService);

    cocoon.redirectTo(entity+"-list");
}
