<?xml version="1.0"?>
<!--
  Copyright 2004 Outerthought bvba and Schaubroeck nv

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<jx:template xmlns:jx="http://apache.org/cocoon/templates/jx/1.0"
             xmlns:ft="http://apache.org/cocoon/forms/1.0#template"
             xmlns:fi="http://apache.org/cocoon/forms/1.0#instance"
             xmlns:i18n="http://apache.org/cocoon/i18n/2.1">
    <jx:import uri="servlet:forms:/resource/internal/generation/jx-macros.xml"/>
    <jx:import uri="forms/Library/CoreLib_template.xml"/>

    <!--<script language="JavaScript">-->

        <!--var fileUrl = "";-->

        <!--function isNodeList(o) {-->
            <!--return o &amp;&amp; typeof o.length == 'number' &amp;&amp; typeof o.item == 'function';-->
        <!--}-->

        <!--function trim(str) {-->
            <!--str = str.replace(/^\s+/, '');-->
            <!--for (var i = str.length - 1; i >= 0; i--) {-->
                <!--if (/\S/.test(str.charAt(i))) {-->
                    <!--str = str.substring(0, i + 1);-->
                    <!--break;-->
                <!--}-->
            <!--}-->
            <!--return str;-->
        <!--}-->

        <!--function TreeAction(id, act, path) {-->
            <!--var elt = document.getElementById(id);-->
            <!--if (!elt) {-->
                <!--alert("Error: cannot find element with id '" + id + "'");-->
                <!--return;-->
            <!--}-->
            <!--var form = cocoon.forms.getForm(elt);-->
            <!--var actInput = id + ":action";-->
            <!--var pathInput = id + ":path";-->
            <!--var elem = form[actInput];-->
            <!--if (isNodeList(elem)) {-->
                <!--for (var i = 0; i &lt; elem.length; i++) {-->
                    <!--var el = elem.item(i);-->
                    <!--el.value = act;-->
                <!--}-->
            <!--}-->
            <!--else {-->
                <!--elem.value = act;-->
            <!--}-->
            <!--elem = form[pathInput];-->
            <!--if (isNodeList(elem)) {-->
                <!--for (var i = 0; i &lt; elem.length; i++) {-->
                    <!--var el = elem.item(i);-->
                    <!--el.value = path;-->
                <!--}-->
            <!--}-->
            <!--else {-->
                <!--elem.value = path;-->
            <!--}-->
            <!--cocoon.forms.submitForm(elt, id);-->
            <!--// Reset fields (this form may be reposted later when in Ajax mode)-->
            <!--var elem = form[actInput];-->
            <!--if (isNodeList(elem)) {-->
                <!--for (var i = 0; i &lt; elem.length; i++) {-->
                    <!--var el = elem.item(i);-->
                    <!--el.value = "";-->
                <!--}-->
            <!--}-->
            <!--else {-->
                <!--elem.value = "";-->
            <!--}-->

            <!--elem = form[pathInput];-->
            <!--if (isNodeList(elem)) {-->
                <!--for (var i = 0; i &lt; elem.length; i++) {-->
                    <!--var el = elem.item(i);-->
                    <!--el.value = "";-->
                <!--}-->
            <!--}-->
            <!--else {-->
                <!--elem.value = "";-->
            <!--}-->
            <!--return false;-->
        <!--}-->
        <!--function TreeToggleCollapse(id, path) {-->
            <!--return TreeAction(id, "toggle-collapse", path);-->
        <!--}-->
        <!--function TreeToggleSelect(id, path, owner) {-->
            <!--if (owner.tagName.toLowerCase() != 'input' || owner.checked) {-->
                <!--var tds = owner.parentNode.parentNode.getElementsByTagName('td');-->
                <!--fileUrl = trim(tds[2].innerHTML);-->
            <!--}-->
            <!--else {-->
                <!--fileUrl = "";-->
            <!--}-->
            <!--return TreeAction(id, "toggle-select", path);-->
        <!--}-->
    <!--</script>-->

    <!-- Macro for Tree Leaf Test -->
    <jx:macro name="currentNode">
        <jx:parameter name="nodeId"/>
        <jx:parameter name="nodeClass"/>
        <jx:if test="${!addedFileObjects.contains(nodeId)}">
            <td>
                <span style="margin-left: ${treeNode.depth * 15}px">
                    <toggle-icon/>
                </span>
                <jx:choose>
                    <jx:when test="${treeNode.selected}">

                        <input type="checkbox" checked="checked"
                               name="${widget.fullName}:select"
                               onclick="return TreeToggleSelect('${treeWidget.fullName}', '${treeNode.path}', this)"/>
                    </jx:when>
                    <jx:otherwise>
                        <jx:choose>
                            <jx:when test="${nodeClass.endsWith('Folder')}">
                                <input type="checkbox" disabled="disabled"/>
                            </jx:when>
                            <jx:otherwise>
                                <input type="checkbox" name="${widget.fullName}$select"
                                       onclick="return TreeToggleSelect('${treeWidget.fullName}', '${treeNode.path}', this)"/>

                            </jx:otherwise>
                        </jx:choose>
                    </jx:otherwise>
                </jx:choose>
            </td>
            <td>
                <jx:choose>
                    <jx:when test="${nodeClass.endsWith('Folder')}">
                        ${treeNode.node.data.name}
                    </jx:when>
                    <jx:otherwise>
                        <a class="${treeNode.selectionType}" href="#"
                           onclick="return TreeToggleSelect('${treeWidget.fullName}', '${treeNode.path}', this)">
                            ${treeNode.node.data.name}
                        </a>
                    </jx:otherwise>
                </jx:choose>

            </td>
            <td>
                ${treeNode.node.data.path}
            </td>
            <td>
                ${treeNode.node.data.contentType}
            </td>
        </jx:if>


    </jx:macro>


    <ft:form-template action="#{$cocoon/continuation/id}.continue" method="POST" enctype="multipart/form-data"
                      ajax="true">
        <fi:group>

            <fi:styling layout="columns"/>
            <fi:items>

                <fi:group>
                    <fi:styling layout=""/>
                    <fi:items>

                        <script language="javascript">
                            function closeTreeWindow() {
                                window.opener.setImagePath(fileUrl, ${CKEditorFuncNum});
//                                window.opener.CKEDITOR.tools.callFunction(${CKEditorFuncNum}, fileUrl);
                                window.close();
                            }
                        </script>
                    </fi:items>
                </fi:group>

                <div id="treeContainer" style="border: 1px dotted Gray">
                    <ft:tree id="tree">

                        <table>
                            <tr>
                                <th/>
                                <th>
                                    <i18n:text key="EmsObject.name"/>
                                </th>
                                <th>
                                    <i18n:text catalogue="core" key="FileObject.path"/>
                                </th>
                                <th>
                                    <i18n:text catalogue="core" key="FileObject.mimeType"/>
                                </th>
                            </tr>

                            <jx:set var="addedFileObjects" value="${java.util.TreeSet()}"/>
                            <jx:forEach items="${document.fileObjects}" var="fileObject">
                                <jx:set var="ignored" value="${addedFileObjects.add(fileObject.id)}"/>
                            </jx:forEach>

                            <ft:tree-nodes>
                                <tr>

                                    <jx:choose>
                                        <jx:when test="${treeNode.node.data.systemName}">
                                            <currentNode nodeId="${treeNode.node.data.id}"
                                                         nodeClass="${treeNode.node.data.class.name}"/>

                                        </jx:when>
                                        <jx:otherwise>
                                            <td>
                                                <span style="margin-left: ${treeNode.depth * 15}px">
                                                    <toggle-icon/>
                                                </span>
                                                <input type="checkbox" disabled="disabled"/>
                                            </td>
                                            <td>
                                                <i18n:text catalogue="core" key="FileObject.root"/>
                                            </td>
                                        </jx:otherwise>
                                    </jx:choose>
                                </tr>
                                <ft:tree-children/>
                            </ft:tree-nodes>
                        </table>
                    </ft:tree>

                </div>
            </fi:items>
        </fi:group>

        <input type="button" class="ui-button" i18n:attr="value" value="Close" onclick="closeTreeWindow()"/>
        <br/>
    </ft:form-template>
</jx:template>